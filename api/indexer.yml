openapi: '3.0.2'
info:
  title: Hermes Indexed Record Service
  version: '0.0.1'
  description: |
    Indexed record service API for retreiving indexed WARC records
servers:
  - url: https://api.server.test/v1
paths:
  /records:
    get:
      summary: List of indexed records
      description: |
        List all indexed records, matching optional filters; when no filter is
        provided, all records are returned
      tags:
        - records
      parameters:
        - $ref: '#/components/parameters/surt'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/before'
        - $ref: '#/components/parameters/after'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Records'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /records/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: |
          Unique identifier of the record object
    get:
      summary: Get record object
      description: Get an indexed record object
      tags:
        - records
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Record'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    Records:
      description: |
        Response used for listing indexed record objects matching the request
      type: object
      required:
        - count
        - results
      properties:
        count:
          description: |
            The total number of record objects that exist for passed query
            filters
          type: integer
          format: int32
          minimum: 0
          example: 1
        results:
          description: An array of Record results
          type: array
          items:
            $ref: '#/components/schemas/Record'
          uniqueItems: true
          minItems: 0
          maxItems: 1000

    Record:
      description: Indexed record object
      type: object
      required:
        - surt
        - timestamp
        - type
        - content
      properties:
        surt:
          description: The Sort-friendly URI Reordering Transform of URI
          type: string
          example: http://(com,example,)
        timestamp:
          description: |
            Immutable timestamp indicating when the data capture for the WARC
            record began; can be used for filtering results and pagination
          type: string
          format: date-time  # RFC 3339, section 5.6
          example: "2020-07-27T17:32:28Z"
        type:
          $ref: '#/components/schemas/Type'
        content:
          $ref: '#/components/schemas/Content'
    Type:
      description: Indexed record type of the record object
      type: string
      enum:
        - unknown
        - response
    Content:
      description: Indexed record content of the record object
      type: object
      required:
        - uri
        - ref
        - sha
        - hcs
        - mct
        - rid
        - x_locator
      properties:
        uri:
          description: WARC target URI
          type: string
        ref:
          description: WARC file name and offset
          type: string
        sha:
          description: SHA1 sum of record payload
          type: string
        hcs:
          description: Response status Code
          type: integer
          format: int32
        mct:
          description: Response content type
          type: string
        rid:
          description: WARC record identifier
          type: string
        x_locator:
          description: IPFS content identifiers
          type: string
        x_title:
          description: Response HTML title
          type: string
        x_encryption_key_id:
          description: Encryption key identifier
          type: string
        x_encryption_method:
          description: Method of payload encryption
          type: string
        x_encryption_nonce:
          description: Nonce used in payload encryption
          type: string
    Error:
      description: Base error object
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string

  parameters:
    surt:
      description: |
        Return record objects that contain the provided SURT (partial or full
        match)
      name: surt
      in: query
      required: false
      schema:
        type: string
      style: form
      explode: false
      example: http://(,com,example)
    type:
      description: |
        Return record objects with the record types
      name: type
      in: query
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Type'
        uniqueItems: true
        minItems: 1
      style: form
      explode: false
    before:
      # TODO API documentation does not reflect correct datatype?
      description: Return records created before provided timestamp
      name: before
      in: query
      required: false
      schema:
        type: string
        format: date-time  # RFC 3339, section 5.6
      example: "2020-07-27T17:32:28Z"
    after:
      # TODO API documentation does not reflect correct datatype?
      description: Return records created after provided timestamp
      name: after
      in: query
      required: false
      schema:
        type: string
        format: date-time  # RFC 3339, section 5.6
      example: "2020-07-27T17:32:28Z"
    limit:
      description: Max records to return
      name: limit
      in: query
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 1000
        default: 10

  responses:
    BadRequest:
      description: Bad request (400)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal server error (500)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found (404)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
